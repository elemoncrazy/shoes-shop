<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazyelemon.dao.MyorderDAO">
  <resultMap id="BaseResultMap" type="com.crazyelemon.entity.Myorder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_price" jdbcType="DOUBLE" property="orderPrice" />
    <result column="order_address_id" jdbcType="INTEGER" property="orderAddressId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, order_number, cust_id, order_time, order_price, order_address_id, order_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from myorder
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from myorder
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.crazyelemon.entity.Myorder">
    insert into myorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderAddressId != null">
        order_address_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderAddressId != null">
        #{orderAddressId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazyelemon.entity.Myorder">
    update myorder
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderAddressId != null">
        order_address_id = #{orderAddressId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazyelemon.entity.Myorder">
    update myorder
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      cust_id = #{custId,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      order_address_id = #{orderAddressId,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

  <!--自己实现的sava方法-->
  <insert id="save" parameterType="com.crazyelemon.entity.Myorder">
    insert into myorder (order_id, order_number, cust_id,
      order_time, order_price, order_address_id,
      order_status)
    values (#{orderId,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{custId,jdbcType=INTEGER},
      #{orderTime,jdbcType=TIMESTAMP}, #{orderPrice,jdbcType=DOUBLE}, #{orderAddressId,jdbcType=INTEGER},
      #{orderStatus,jdbcType=INTEGER})
  </insert>
  <!--自己实现的queryAll()-->
  <select id="queryAll" parameterType="java.lang.Integer" resultType="com.crazyelemon.entity.Myorder">
    select
    <include refid="Base_Column_List" />
    from myorder
    where cust_id = #{custId}
  </select>
  <!--自己实现的 根据鞋子名称和用户id查找用户的订单-->
  <select id="queryByShooesName" resultType="com.crazyelemon.entity.Myorder">
    select
    my.order_id, order_number, my.cust_id, order_time, order_price, my.order_address_id, order_status
    from myorder my join order_detail od
    on my.order_id = od.order_id
    join shoes_detail sd on sd.shoes_detail_id = od.shoes_detail_id
    join shoes s on s.shoes_id = sd.shoes_id
    where s.shoes_name like "%"#{shoesName}"%" and my.cust_id = #{custId}
  </select>
  <!--自己实现的 queryById()
        public  List<Myorder> queryById(@Param(value = "orderNumber") Integer orderNumber,@Param(value = "custId") Integer custId);
  -->
  <select id="queryById" resultType="com.crazyelemon.entity.Myorder">
    select
    order_id, order_number, cust_id, order_time, order_price, order_address_id, order_status
    from myorder
    where order_number like "%"#{orderNumber}"%" and cust_id = #{custId}
  </select>
  <!--修改订单状态
  public int updateStatus(Integer status,Integer orderId);
  -->
  <update id="updateStatus" parameterType="com.crazyelemon.entity.Myorder">
    update myorder
    set order_status = #{status}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>